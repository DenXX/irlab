apply plugin: 'java'
apply plugin: 'gradleProtobufPlugin'
apply plugin: 'application'

sourceCompatibility = 1.8
version = '2.0'
mainClassName = 'edu.emory.mathcs.clir.relextract.RelationExtractionApp'
//mainClassName = 'edu.emory.mathcs.clir.relextract.tools.FreebaseLexiconLuceneIndexBuilder'
//mainClassName = 'edu.emory.mathcs.clir.relextract.tools.ProcessWikipedia2Freebase'
//mainClassName = 'edu.emory.mathcs.clir.relextract.tools.ProcessCrossWikisDictionary'
//mainClassName = 'edu.emory.mathcs.clir.relextract.tools.LnrmEntityNameConverter'
//mainClassName = 'edu.emory.mathcs.clir.relextract.tools.EntityTypeLookupApp'

//applicationDefaultJvmArgs = ["-Xmx8g"]

//applicationDefaultJvmArgs = ["-Xmx200g",
//                             "-XX:+UseParallelGC",
//                             "-XX:+UseParallelOldGC",
//                             "-XX:+UseAdaptiveSizePolicy",
//                             "-XX:+AggressiveHeap"
//]

//applicationDefaultJvmArgs = ["-Xmx220g",
//                             "-XX:+UseParNewGC",
//                             "-XX:+UseConcMarkSweepGC",
//                             "-XX:PermSize=20g"]

applicationDefaultJvmArgs = ["-Xmx8g",
                             "-XX:+UseParNewGC",
                             "-XX:+UseConcMarkSweepGC"]

configurations.all {
    resolutionStrategy {
        // fail eagerly on version conflict (includes transitive dependencies)
        // e.g. multiple different versions of the same dependency (group and name are equal)
        //failOnVersionConflict()

        // force certain versions of dependencies (including transitive)
        //  *append new forced modules:
        force 'edu.stanford.nlp:stanford-corenlp:3.5.1'
        //  *replace existing forced modules with new ones:
        //forcedModules = ['asm:asm-all:3.3.1']
    }
}


repositories {
    mavenCentral()
    // For twitter maven dependencies
    maven {
        url = "http://maven.twttr.com/"
    }

    flatDir {
        dirs 'libs'
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.tomcawley:gradle-protobuf-plugin:0.2'
    }
}

dependencies {
    // Including MIML-RE
    compile name: 'mimlre-2012-11-27'

    compile name: 'stanford-srparser-2014-10-23-models'
    compile name: 'stanford-corenlp-caseless-2014-02-25-models'
    compile name: 'virt_jena2'
    compile name: 'virtjdbc4'
    compile group: 'org.apache.lucene', name: 'lucene-core', version: '4.10.1'
    compile group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: '4.10.1'
    compile group: 'org.apache.lucene', name: 'lucene-suggest', version: '4.10.1'
    compile group: 'org.apache.lucene', name: 'lucene-queries', version: '4.10.1'
    compile group: 'org.apache.lucene', name: 'lucene-queryparser', version: '4.10.1'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '2.6.0'
    compile group: 'edu.umd', name: 'cloud9', version: '1.4.17'
    compile group: 'info.bliki.wiki', name: 'bliki-core', version: '3.0.19'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'
    compile group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: '2.5.1'
    compile group: 'org.apache.hadoop', name: 'hadoop-auth', version: '2.5.1'
    compile group: 'org.apache.hadoop', name: 'hadoop-common', version: '2.5.1'
    compile group: 'org.apache.hadoop', name: 'hadoop-core', version: '1.2.1'
    compile group: 'org.apache.commons', name: 'commons-compress', version: '1.9'
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '3.5.1'
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '3.5.1', classifier: 'models'
    compile group: 'org.apache.jena', name: 'apache-jena-libs', version: '2.12.0'
    // Added because of java.lang.NoClassDefFoundError: org/w3c/dom/ElementTraversal
    compile group: 'org.apache.xmlgraphics', name: 'batik-ext', version: '1.7'


    testCompile group: 'junit', name: 'junit', version: '4.11'
}

run {
    /* Need to split the space-delimited value in the exec.args */
    if (System.getProperty("exec.args") != null) {
        args System.getProperty("exec.args").split()
    }
}

task writeClasspath << {
    buildDir.mkdirs()
    new File(buildDir, "classpath.txt").text = configurations.runtime.asPath + "\n"
}

tasks.remove(cleanProto)

protoBuf {
    protoc {
        'Linux' {
            path = "protoc"
        }
        'Mac OS X' {
            path = '/usr/local/bin/protoc'
        }
    }

    sourceSets {
        proto {
            srcDir = 'src/main/proto'
        }
    }

    lang {
        java {
            genDir = 'src/main/java'
        }
    }
}
